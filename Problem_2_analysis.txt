SHAMBHAVI AWASTHI
DATA STRUCTURES AND ALGORITHMS NANODEGREE
PROJECT 2 - PROBLEMS VS ALGORITHMS

Problem 2: Search in a Rotated Sorted Array
You are given a sorted array which is rotated at some random pivot point.
Example: [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]
You are given a target value to search. If found in the array return its index, otherwise return -1.
You can assume there are no duplicates in the array and your algorithm's runtime complexity must be in the order of O(log n).
Example:Input: nums = [4,5,6,7,0,1,2], target = 0, Output: 4

Analysis: In this problem , the concept of recursive binary search was used to search for left and right halves of the given input_list. Space complexity is O(1) as it returns only pointers. Time complexity is O(logn) i.e is of Binary Search.
